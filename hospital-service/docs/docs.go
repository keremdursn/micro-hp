// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/cities": {
            "get": {
                "description": "Returns all cities (il)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location"
                ],
                "summary": "Tüm şehirleri listeler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CityLookup"
                            }
                        }
                    }
                }
            }
        },
        "/api/districts": {
            "get": {
                "description": "Returns all districts (ilçe) for a given city",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Location"
                ],
                "summary": "Seçili ile ait ilçeleri listeler",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "City ID",
                        "name": "city_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.DistrictLookup"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/hospital/me": {
            "get": {
                "description": "Returns the hospital info of the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hospital"
                ],
                "summary": "Giriş yapan kullanıcının hastane bilgisini getirir",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HospitalResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the hospital info of the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hospital"
                ],
                "summary": "Giriş yapan kullanıcının hastane bilgisini günceller",
                "parameters": [
                    {
                        "description": "Hospital update info",
                        "name": "hospital",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateHospitalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HospitalResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/polyclinic/add": {
            "post": {
                "description": "Adds a polyclinic to the hospital",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polyclinic"
                ],
                "summary": "Hastaneye poliklinik ekler",
                "parameters": [
                    {
                        "description": "Polyclinic info",
                        "name": "polyclinic",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.AddHospitalPolyclinicRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.HospitalPolyclinicResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/polyclinic/all": {
            "get": {
                "description": "Returns all polyclinics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polyclinic"
                ],
                "summary": "Tüm poliklinikleri listeler",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PolyclinicLookup"
                            }
                        }
                    }
                }
            }
        },
        "/api/polyclinic/list": {
            "get": {
                "description": "Lists hospital's polyclinics with pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polyclinic"
                ],
                "summary": "Hastanenin polikliniklerini listeler (sayfalı)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.HospitalPolyclinicListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/polyclinic/remove/{id}": {
            "delete": {
                "description": "Removes a polyclinic from the hospital",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Polyclinic"
                ],
                "summary": "Hastaneden poliklinik siler",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Hospital Polyclinic ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AddHospitalPolyclinicRequest": {
            "type": "object",
            "properties": {
                "polyclinic_id": {
                    "type": "integer"
                }
            }
        },
        "dto.CityLookup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.DistrictLookup": {
            "type": "object",
            "properties": {
                "city_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.HospitalPolyclinicDetail": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "personnel_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.PolyclinicPersonnelGroup"
                    }
                },
                "polyclinic_name": {
                    "type": "string"
                },
                "total_personnel": {
                    "type": "integer"
                }
            }
        },
        "dto.HospitalPolyclinicListResponse": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "polyclinics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.HospitalPolyclinicDetail"
                    }
                },
                "size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.HospitalPolyclinicResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "polyclinic_id": {
                    "type": "integer"
                },
                "polyclinic_name": {
                    "type": "string"
                }
            }
        },
        "dto.HospitalResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer"
                },
                "city_name": {
                    "type": "string"
                },
                "district_id": {
                    "type": "integer"
                },
                "district_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tax_number": {
                    "type": "string"
                }
            }
        },
        "dto.PolyclinicLookup": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.PolyclinicPersonnelGroup": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateHospitalRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city_id": {
                    "type": "integer"
                },
                "district_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tax_number": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
